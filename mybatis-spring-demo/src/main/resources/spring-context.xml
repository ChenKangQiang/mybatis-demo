<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:db.properties"/>

    <context:component-scan base-package="edu.tongji.comm.spring.demo.**" />


    <!--配置数据源，当在spring中使用mybatis时，一般不在mybatis-config中配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--配置Tomcat连接池-->
    <bean id="dataSource_tomcat" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="10" />
        <property name="maxActive" value="100" />
    </bean>

    <!--配置c3p0连接池-->
    <bean id="dataSource_c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialPoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
    </bean>

    <!--配置 mybatis 的 sqlSessionFactory ，sqlSessionFactory 的构建需要数据源和映射文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--当然还是可以使用mybatis-config.xml文件，这里利用 mybatis-config.xml 来开启日志-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:mappersXML/UserMapper.xml" />
        <property name="typeAliasesPackage" value="edu.tongji.comm.spring.demo.domain" />
    </bean>

    <!--动态代理的实现:MapperFactoryBean。这个类可以让你直接注入数据映射器接口到你的 service层bean中；
    如果 UserMapper 有一个对应的 MyBatis 的 XML 映射器文件, 如果 XML 文件在类路径的位置和映射器类相同时, 它会被 MapperFactoryBean 自动解析。
    没有必要在 MyBatis 配置文件中去指定映射器 , 除非映射器的XML文件在不同的类路径下 。-->
    <!--
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="edu.tongji.comm.spring.demo.mappers.UserMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    -->

    <!-- 基于注解的userMapper的动态代理实现-->
    <!--
    <bean id="userMapperWithAnnotation" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="edu.tongji.comm.spring.demo.mappers.UserMapperWithAnnotation" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    -->

    <!--没有必要在 Spring 中一一注册所有的映射器。
        使用 MapperScannerConfigurer , 会自动查找类路径下的映射器并自动将他们创建成MapperFactoryBean。-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="edu.tongji.comm.spring.demo.mappers" />
    </bean>


</beans>